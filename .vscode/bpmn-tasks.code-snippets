{
	// Place your simBPMN workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"bpmn-task simpn" : {
		"scope": "python",
		"prefix" : "bpmn task",
		"body": [
			"class $1Task(BPMN):",
			"	type=\"task\"",
			"	model=problem",
			"	name=\"$2\"",
			"	incoming=[ \"$3\", \"$4\" ]",
			"	outgoing=[ \"$5\", \"$4\" ]",
			"",
			"	def behaviour(c,r):",
			"		c = increment_priority(c)",
			"		return [ SimToken((c,r), delay=pick_time($6)) ]",
			"",
			""
		],
		"description": "Creates a bpmn task using helper classes"
	}
}