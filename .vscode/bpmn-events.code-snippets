{
	// Place your simBPMN workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"bpmn-end simpn" : {
		"scope": "python",
		"prefix": "bpmn end",
		"body": [
			"class $1EndEvent(BPMN):",
			"	type=\"end\"",
			"	model=problem",
			"	name=\"$2\"",
			"	incoming=[$3]",
			"",
			""
		],
		"description": "Makes a bpmn helper class."
	},
	"bpmn inter event" : {
		"scope": "python",
		"prefix": "bpmn inter event",
		"body": [
			"class $1InterEvent(BPMN):",
			"	type=\"event\"",
			"	model=problem",
			"	name=\"$2\"",
			"	incoming=[$3]",
			"	outgoing=[$4]",
			"",
			"	def behaviour($5):",
			"		event_time = pick_time($6)",
			"		return [",
			"			SimToken($7, delay=event_time),",
			"		]",
			"",
			""
		],
		"description": "Makes a bpmn helper class for intermediate event."
	}
}